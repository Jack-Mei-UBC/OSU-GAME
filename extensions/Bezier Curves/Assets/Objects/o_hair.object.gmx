<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///initialize ticker
randomize(); 
game_tick = 0; 
count = 32; 

var i = 0;
for(i = 0; i &lt; 512; i++){
    hair[i] = random(100); 
    hair2[i] = choose(1,-1); 
    haircolor[i] = choose(c_lime,c_aqua,c_purple,c_red,c_blue,c_green,c_white,c_navy,c_maroon,c_yellow); 
}

for(i = 0; i &lt; 3; i++){
    facecolor[i] = choose(c_white,c_gray,c_dkgray); 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///change things
if(keyboard_check_released(vk_enter)){
    instance_create(0,0,o_controller);
    instance_destroy(); 
}

if(mouse_wheel_down() or keyboard_check_pressed(vk_down)){count+=16;}
if(mouse_wheel_up() or keyboard_check_pressed(vk_up)){count-=16;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_set_width(room0,window_get_width()); 
room_set_width(room0,window_get_height()); 
surface_resize(application_surface,window_get_width(),window_get_height());
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw a hair thing
game_tick++; 

var head_x = room_width/2;
var head_y = 64;
var head_length = 256; 

//draw hair
//var _count = 32; 
for(o = 0; o&lt;count; o++){
    point_x[0] = head_x + head_length/2*hair2[o];
    point_y[0] = head_y + head_length/3;
    
    point_x[1] = head_x + sin((game_tick+hair[o])/60)*hair[o]*hair2[o] + head_length/26*hair2[o] + head_length/2*hair2[o];
    point_y[1] = head_y + head_length/1.5 + head_length/8 + abs(o - count/2); 
    
    point_x[2] = head_x - sin((game_tick+hair[o])/60)*hair[o]*hair2[o] + head_length/27*hair2[o] + head_length/2*hair2[o];
    point_y[2] = head_y + head_length/1.25 + abs(o - count/2); 
    
    point_x[3] = head_x + sin((game_tick+hair[o])/60)*hair[o]*hair2[o] + head_length/28*hair2[o] + head_length/2*hair2[o];
    point_y[3] = head_y + head_length/1.5 + head_length + abs(o - count/2)*2; 
    
    draw_bezier_n(point_x,point_y,16,2,haircolor[o],1,false,0,0);
}

//draw head
for(o = 0; o&lt;3; o++){
    face_x[0] = room_width/2 - head_length/2 - hair[o]/25; 
    face_y[0] = 540/2 + hair[o]/25; 
    
    face_x[1] = room_width/2; 
    face_y[1] = 540/2 + head_length + hair[o]/25; 
    
    face_x[2] = room_width/2 + head_length/2 + hair[o]/25; 
    face_y[2] = 540/2 + hair[o]/25; 
    
    draw_bezier_n(face_x,face_y,16,2,facecolor[o],1,false,0,0);
}

//draw hair 
for(o = 0; o&lt;count; o++){
    point_x[0] = head_x;
    point_y[0] = head_y;
    
    point_x[1] = head_x + sin((game_tick+hair[o])/60)*hair[o]*hair2[o] + head_length/1.1*hair2[o];
    point_y[1] = head_y + head_length/8 + abs(o - count/2)*2; 
    
    point_x[2] = head_x - sin((game_tick+hair[o])/60)*hair[o]*hair2[o] + head_length/1.4*hair2[o];
    point_y[2] = head_y + head_length/1.25 + abs(o - count/2)*2; 
    
    point_x[3] = head_x + sin((game_tick+hair[o])/60)*hair[o]*hair2[o]*1.75 + head_length/1.5*hair2[o];
    point_y[3] = head_y + head_length + abs(o - count/2)*2; 
     
    draw_bezier_n(point_x,point_y,16,2,haircolor[o],1,false,0,0);
}

//draw framerate box
draw_set_halign(fa_left);
draw_set_valign(fa_top); 
draw_set_color(c_black);
draw_set_alpha(.8);
draw_rectangle(0,0,128,32,false);
draw_set_color(c_white);
draw_set_alpha(1);
draw_text(10,10,"fps: " + string(fps) + "/60"
        + "# Press &lt;enter&gt; to see something else"
        + "#" + string(count*2) + " hairs. Controlled by 'var count' in draw function of o_hair");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
