<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
set_data()

//SETTING VARIABLES AND OTHERS
//SONG BEATS
//L means straight slider, P is one point inbetween, and B is multiple
//B with 2 same points are absolute points
//
var line=0;
pos=3;
global.beats = "";
current_line = 1

//Grabbing x,y, and ms
while(pos &lt; string_length(global.data)) {
    comma = 0;
    while ( comma &lt; 3 ){
        if !(string_char_at( global.data, pos ) = ","){
            global.beats = string_insert(string_char_at( global.data, pos ), global.beats , current_line)
            current_line++
            pos++
        }
        else{
            comma++
            global.beats = string_insert(string_char_at( global.data, pos ), global.beats , current_line)
            current_line++
            pos++
        }
    }
    global.data = string_delete(global.data, string_pos(chr(10), global.data), 1);
    pos = string_pos(chr(10), global.data) + 1
}


color = c_purple
order = 1
pause = true
global.ingame = true
song = "hard"
intro_bpm = 184
asu_bpm = 185
global.pause_game = false
dim = 50
global.death = false
if audio_is_playing(snd_song){
    audio_stop_sound(snd_song)
    audio_play_sound(snd_song, 0, false);
}
ydiff = 182
xdiff = 396
amp = 2.207

found_times = false
f_x = ""
f_y = ""
f_t = ""
c_combo= ""
t = 0
u_x = 0
u_y = 0
u_t = 0
global.combo = 0
global.points = 0
wait_before_start = 0
current_line = 1
//Set Global Variables such as AR and CS
global.size = 1

if (global.ar &lt;5){
    global.ms=1800-(global.ar*120)
}
else if (global.ar &gt;=5){
    global.ms=1200-((global.ar-5)*150)
}
//Creating background
map = instance_create(960,540,o_background)
o_dim = instance_create(0,0,o_DARKNESSv2)
o_dim.dim = (1-(0.01*dim))

//Creating the current tapping note
instance_create(0,0,o_cnote)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.ingame = true {
    if global.pause_game = false{
        if song = "hard"{
            if found_times = false and string_length(global.beats )&gt;3{
                comma = 0
                pos = 1
                c_combo = ""
                current_line = 1
                while ( comma &lt; 3 ){
                    if !(string_char_at( global.beats, pos ) = ","){
                        c_combo = string_insert(string_char_at( global.beats, pos ), c_combo , current_line)
                        current_line++
                        pos++
                    }
                    else{
                        comma++
                        c_combo = string_insert(string_char_at( global.beats, pos ), c_combo , current_line)
                        current_line++
                        pos++
                    }
                }
                global.beats = string_delete(global.beats, 1, (current_line-1))
                pos = 1
                current_line = 1
                f_x = ""
                while !(string_char_at( c_combo, pos ) = ","){
                    f_x = string_insert( string_char_at( c_combo, pos ) , f_x , current_line)
                    current_line++
                    pos++
                }
                c_combo = string_delete(c_combo, 1, (current_line))
                u_x = real(f_x)
                pos = 1
                current_line = 1
                f_y = ""
                while !(string_char_at( c_combo, pos ) = ","){
                    f_y = string_insert( string_char_at( c_combo, pos ) , f_y , current_line)
                    current_line++
                    pos++
                }
                c_combo = string_delete(c_combo, 1, (current_line))
                u_y = real(f_y)
                pos = 1
                current_line = 1
                f_t =""
                while !(string_char_at( c_combo, pos ) = ","){
                    f_t = string_insert( string_char_at( c_combo, pos ) , f_t , current_line)
                    current_line++
                    pos++
                }
                c_combo = string_delete(c_combo, 1, (current_line))
                u_t = real(f_t)
                found_times = true
            }
        }
        t+=4
        if (t-4)&lt;(u_t-global.ms) and (t+4)&gt;(u_t-global.ms){

            hit = instance_create((u_x*amp+400),(u_y*amp)+185,o_hitbox)
            hit.color = color
            hit.order = order
            order++
            if order &gt; 9
            order = 1
            found_times = false
        }
        if string_length(global.beats )&lt;3 and t &gt; (u_t+global.ms*2){
            room_goto(room4)
        }
    }
    //Pause Code
    if keyboard_check_pressed(vk_escape) and global.pause_game = false{
        global.pause_game = true
        bcontinue = instance_create(1920,230,o_continue)
        bretry = instance_create(1920,480,o_retry)
        bquit = instance_create(1920,730,o_quit)
        if audio_is_playing(snd_song){
            audio_pause_sound(snd_song)
        }
    }
    else if keyboard_check_pressed(vk_escape) and global.pause_game = true {
        global.pause_game = false
        if audio_is_playing(snd_song){
            audio_resume_sound(snd_song)
        }
    }

}
if keyboard_check_pressed ( vk_f5 ) {
    room_restart()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
